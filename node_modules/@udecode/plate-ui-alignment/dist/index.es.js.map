{"version":3,"file":"index.es.js","sources":["../src/AlignToolbarButton/AlignToolbarButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Alignment, KEY_ALIGN, setAlign } from '@udecode/plate-alignment';\nimport {\n  getPreventDefaultHandler,\n  isCollapsed,\n  someNode,\n  useEventPlateId,\n  usePlateEditorState,\n} from '@udecode/plate-core';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-ui-toolbar';\n\nexport interface AlignToolbarButtonProps extends ToolbarButtonProps {\n  value: Alignment;\n  pluginKey?: string;\n}\n\nexport const AlignToolbarButton = ({\n  id,\n  value,\n  pluginKey = KEY_ALIGN,\n  ...props\n}: AlignToolbarButtonProps) => {\n  const editor = usePlateEditorState(useEventPlateId(id));\n\n  return (\n    <ToolbarButton\n      active={\n        isCollapsed(editor?.selection) &&\n        someNode(editor!, { match: { [pluginKey]: value } })\n      }\n      onMouseDown={\n        editor\n          ? getPreventDefaultHandler(setAlign, editor, {\n              value,\n              key: pluginKey,\n            })\n          : undefined\n      }\n      {...props}\n    />\n  );\n};\n"],"names":["AlignToolbarButton","id","value","pluginKey","KEY_ALIGN","props","editor","usePlateEditorState","useEventPlateId","isCollapsed","selection","someNode","match","getPreventDefaultHandler","setAlign","key","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgBO,MAAMA,kBAAkB,GAAG,CAAC;EACjCC,EADiC;EAEjCC,KAFiC;AAGjCC,EAAAA,SAAS,GAAGC,SAHqB;EAIjC,GAAGC,KAAAA;AAJ8B,CAAD,KAKH;EAC7B,MAAMC,MAAM,GAAGC,mBAAmB,CAACC,eAAe,CAACP,EAAD,CAAhB,CAAlC,CAAA;AAEA,EAAA,oBACE,oBAAC,aAAD,EAAA,QAAA,CAAA;AACE,IAAA,MAAM,EACJQ,WAAW,CAACH,MAAD,aAACA,MAAD,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAACA,MAAM,CAAEI,SAAT,CAAX,IACAC,QAAQ,CAACL,MAAD,EAAU;AAAEM,MAAAA,KAAK,EAAE;AAAE,QAAA,CAACT,SAAD,GAAaD,KAAAA;AAAf,OAAA;AAAT,KAAV,CAHZ;IAKE,WAAW,EACTI,MAAM,GACFO,wBAAwB,CAACC,QAAD,EAAWR,MAAX,EAAmB;MACzCJ,KADyC;AAEzCa,MAAAA,GAAG,EAAEZ,SAAAA;AAFoC,KAAnB,CADtB,GAKFa,SAAAA;AAXR,GAAA,EAaMX,KAbN,CADF,CAAA,CAAA;AAiBD;;;;"}