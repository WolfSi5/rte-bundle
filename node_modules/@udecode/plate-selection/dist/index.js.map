{"version":3,"file":"index.js","sources":["../src/utils/extractSelectableIds.ts","../src/blockSelectionStore.ts","../src/components/BlockSelectable.tsx","../src/components/SelectionArea.tsx","../src/components/BlockSelectionArea.tsx","../src/components/BlockStartArea.tsx","../src/createBlockSelectionPlugin.tsx"],"sourcesContent":["export const extractSelectableIds = (els: Element[]): any[] => {\n  return els.map((v) => v.getAttribute('data-key'));\n};\n","import { createStore } from '@udecode/plate-core';\nimport { ChangedElements } from './components/SelectionArea';\nimport { extractSelectableIds } from './utils/extractSelectableIds';\n\nexport const blockSelectionStore = createStore('selection')({\n  selectedIds: new Set(),\n})\n  .extendActions((set, get) => ({\n    setSelectedIds: ({ added, removed }: ChangedElements) => {\n      const prev = get.selectedIds();\n\n      const next = new Set(prev);\n      extractSelectableIds(added).forEach((id) => next.add(id));\n      extractSelectableIds(removed).forEach((id) => next.delete(id));\n\n      set.selectedIds(next);\n    },\n    reset: () => {\n      set.selectedIds(new Set());\n    },\n  }))\n  .extendSelectors((set, get) => ({\n    isSelecting: () => get.selectedIds().size > 0,\n    isSelected: (id?: string) => id && get.selectedIds().has(id),\n  }));\n\nexport const useBlockSelectionSelectors = () => blockSelectionStore.use;\nexport const blockSelectionSelectors = blockSelectionStore.get;\nexport const blockSelectionActions = blockSelectionStore.set;\n","import React, { ReactNode, useMemo } from 'react';\nimport {\n  findNodePath,\n  getPluginOptions,\n  HTMLPropsAs,\n  isInline,\n  queryNode,\n  TElement,\n  useEditorRef,\n} from '@udecode/plate-core';\nimport { useBlockSelectionSelectors } from '../blockSelectionStore';\nimport {\n  BlockSelectionPlugin,\n  KEY_BLOCK_SELECTION,\n} from '../createBlockSelectionPlugin';\n\nexport interface BlockSelectableState {\n  active: boolean;\n}\n\nexport interface BlockSelectableProps extends HTMLPropsAs<'div'> {\n  element: TElement;\n  children: ReactNode;\n  state?: BlockSelectableState;\n  selectedColor?: string;\n}\n\nexport const useBlockSelectableState = ({\n  element,\n  state,\n}: BlockSelectableProps) => {\n  const editor = useEditorRef();\n\n  const path = useMemo(() => findNodePath(editor, element), [editor, element]);\n\n  if (!path || isInline(editor, element)) {\n    return {\n      active: false,\n      ...state,\n    };\n  }\n\n  const { query } = getPluginOptions<BlockSelectionPlugin>(\n    editor,\n    KEY_BLOCK_SELECTION\n  );\n\n  if (query && !queryNode([element, path], query)) {\n    return {\n      active: false,\n      ...state,\n    };\n  }\n\n  return {\n    active: true,\n    ...state,\n  };\n};\n\nexport const useBlockSelectable = ({\n  element,\n  selectedColor,\n  ...props\n}: BlockSelectableProps): HTMLPropsAs<'div'> => {\n  const id = element.id as string | undefined;\n  const isSelected = useBlockSelectionSelectors().isSelected(id);\n\n  return {\n    className: isSelected\n      ? 'slate-selected slate-selectable'\n      : 'slate-selectable',\n    style: isSelected\n      ? {\n          backgroundColor: selectedColor,\n        }\n      : undefined,\n    'data-key': id,\n    key: id,\n    ...props,\n  };\n};\n\nexport const BlockSelectable = (props: BlockSelectableProps) => {\n  const htmlProps = useBlockSelectable(props as any);\n  const { active } = useBlockSelectableState(props as any);\n\n  if (!active) return <>{htmlProps.children}</>;\n\n  return <div {...htmlProps} />;\n};\n","import React, { createRef, useEffect } from 'react';\nimport VanillaSelectionArea, {\n  ChangedElements,\n  SelectionEvent,\n  SelectionEvents,\n  SelectionOptions,\n} from '@viselect/vanilla';\n\nexport type { SelectionEvent, ChangedElements };\n\nexport interface SelectionAreaProps\n  extends Omit<Partial<SelectionOptions>, 'boundaries'>,\n    React.HTMLAttributes<HTMLDivElement> {\n  className?: string;\n  onBeforeStart?: SelectionEvents['beforestart'];\n  onStart?: SelectionEvents['start'];\n  onMove?: SelectionEvents['move'];\n  onStop?: SelectionEvents['stop'];\n\n  /**\n   * The boundaries of the selection area.\n   * @boundaries ref of the selection area element.\n   */\n  getBoundaries?: (\n    boundaries: SelectionOptions['boundaries']\n  ) => SelectionOptions['boundaries'];\n}\n\nexport const SelectionArea = ({\n  onBeforeStart,\n  onStart,\n  onMove,\n  onStop,\n  children,\n  selectionAreaClass,\n  selectionContainerClass,\n  container,\n  document,\n  selectables,\n  startAreas,\n  behaviour,\n  features,\n  getBoundaries = (boundaries) => boundaries,\n  ...props\n}: SelectionAreaProps) => {\n  const ref = createRef<HTMLDivElement>();\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    const opt = {\n      selectionAreaClass,\n      selectionContainerClass,\n      container,\n      document,\n      selectables,\n      startAreas,\n      behaviour,\n      features,\n    };\n\n    const areaBoundaries = ref.current as HTMLElement;\n\n    const selection = new VanillaSelectionArea({\n      boundaries: getBoundaries(areaBoundaries),\n      ...opt,\n    });\n\n    onBeforeStart && selection.on('beforestart', onBeforeStart);\n    onStart && selection.on('start', onStart);\n    onMove && selection.on('move', onMove);\n    onStop && selection.on('stop', onStop);\n\n    return () => selection.destroy();\n  }, []);\n\n  return (\n    <div ref={ref} {...props}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  deselectEditor,\n  findNode,\n  focusEditor,\n  getEndPoint,\n  removeNodes,\n  useEditorRef,\n  useHotkeys,\n  UseHotkeysOptions,\n  withoutNormalizing,\n} from '@udecode/plate-core';\nimport {\n  blockSelectionActions,\n  blockSelectionSelectors,\n} from '../blockSelectionStore';\nimport {\n  SelectionArea,\n  SelectionAreaProps,\n  SelectionEvent,\n} from './SelectionArea';\n\nexport interface BlockSelectionAreaProps extends Partial<SelectionAreaProps> {\n  enterHotkeyOptions?: UseHotkeysOptions;\n  deleteHotkeyOptions?: UseHotkeysOptions;\n}\n\nexport const useBlockSelectionArea = ({\n  enterHotkeyOptions,\n  deleteHotkeyOptions,\n  ...props\n}: BlockSelectionAreaProps): SelectionAreaProps => {\n  const editor = useEditorRef();\n\n  useHotkeys(\n    'enter',\n    () => {\n      if (blockSelectionSelectors.isSelecting()) {\n        // get the first block in the selection\n        const entry = findNode(editor, {\n          match: (n) => blockSelectionSelectors.selectedIds().has(n.id),\n        });\n\n        if (entry) {\n          const [, path] = entry;\n\n          setTimeout(() => {\n            // focus the end of that block\n            focusEditor(editor, getEndPoint(editor, path));\n            blockSelectionActions.reset();\n          }, 0);\n        }\n      }\n    },\n    enterHotkeyOptions,\n    []\n  );\n\n  useHotkeys(\n    'backspace, delete',\n    () => {\n      if (blockSelectionSelectors.isSelecting()) {\n        withoutNormalizing(editor, () => {\n          blockSelectionSelectors.selectedIds().forEach((id) => {\n            const entry = findNode(editor, { match: { id } });\n\n            if (entry) {\n              const [, path] = entry;\n\n              removeNodes(editor, {\n                at: path,\n              });\n            }\n          });\n        });\n\n        setTimeout(() => {\n          blockSelectionActions.reset();\n        }, 0);\n      }\n    },\n    deleteHotkeyOptions,\n    []\n  );\n\n  const onStart = ({ event, selection }: SelectionEvent) => {\n    deselectEditor(editor);\n\n    if (!event?.shiftKey) {\n      selection.clearSelection();\n      blockSelectionActions.reset();\n    }\n  };\n\n  const onMove = ({ store: { changed } }: SelectionEvent) => {\n    if (!changed.added.length && !changed.removed.length) return;\n\n    blockSelectionActions.setSelectedIds(changed);\n  };\n\n  return {\n    className: 'slate-SelectionArea',\n    style: {\n      position: 'relative',\n    },\n    onStart,\n    onMove,\n    // Class for the selection-area itself (the element).\n    selectionAreaClass: 'slate-selection-area',\n    // Class for the selection-area container.\n    // selectionContainerClass=\"selection-area-container\"\n    // Query selector or dom-node to set up container for the selection-area element.\n    // container=\"body\"\n    // document object - if you want to use it within an embed document (or iframe).\n    // document={window.document}\n    // Query selectors for elements which can be selected.\n    selectables: '.slate-selectable',\n    // Query selectors for elements from where a selection can be started from.\n    startAreas: '.slate-start-area',\n    // Query selectors for elements which will be used as boundaries for the selection.\n    // boundaries={['html']}\n    // Behaviour related options.\n    // behaviour={{\n    //   // Specifies what should be done if already selected elements get selected again.\n    //   //   invert: Invert selection for elements which were already selected\n    //   //   keep: Keep selected elements (use clearSelection() to remove those)\n    //   //   drop: Remove stored elements after they have been touched\n    //   overlap: 'invert',\n    //\n    //   // On which point an element should be selected.\n    //   // Available modes are cover (cover the entire element), center (touch the center) or\n    //   // the default mode is touch (just touching it).\n    //   intersect: 'touch',\n    //\n    //   // px, how many pixels the point should move before starting the selection (combined distance).\n    //   // Or specifiy the threshold for each axis by passing an object like {x: <number>, y: <number>}.\n    //   startThreshold: 10,\n    //\n    //   // Scroll configuration.\n    //   scrolling: {\n    //     // On scrollable areas the number on px per frame is devided by this amount.\n    //     // Default is 10 to provide a enjoyable scroll experience.\n    //     speedDivider: 10,\n    //\n    //     // Browsers handle mouse-wheel events differently, this number will be used as\n    //     // numerator to calculate the mount of px while scrolling manually: manualScrollSpeed / scrollSpeedDivider.\n    //     manualSpeed: 750,\n    //\n    //     // This property defines the virtual inset margins from the borders of the container\n    //     // component that, when crossed by the mouse/touch, trigger the scrolling. Useful for\n    //     // fullscreen containers.\n    //     startScrollMargins: { x: 0, y: 0 },\n    //   },\n    // }}\n    // // Features.\n    // features={{\n    //   // Enable / disable touch support.\n    //   touch: true,\n    //\n    //   // Range selection.\n    //   range: true,\n    //\n    //   // Configuration in case a selectable gets just clicked.\n    //   singleTap: {\n    //     // Enable single-click selection (Also disables range-selection via shift + ctrl).\n    //     allow: true,\n    //\n    //     // 'native' (element was mouse-event target) or 'touch' (element visually touched).\n    //     intersect: 'native',\n    //   },\n    // }}\n    ...props,\n  };\n};\n\nexport const BlockSelectionArea = (props: BlockSelectionAreaProps) => {\n  const componentProps = useBlockSelectionArea(props);\n\n  return <SelectionArea {...componentProps} />;\n};\n","import {\n  createComponentAs,\n  createElementAs,\n  HTMLPropsAs,\n} from '@udecode/plate-core';\n\nexport interface BlockStartAreaProps extends HTMLPropsAs<'div'> {\n  placement?: 'top' | 'bottom' | 'left' | 'right';\n  size?: string | number;\n}\n\nexport const useBlockStartArea = ({\n  placement = 'left',\n  size = 'auto',\n  ...props\n}: BlockStartAreaProps): HTMLPropsAs<'div'> => {\n  return {\n    ...props,\n    className: `slate-start-area slate-start-area-${placement}`,\n    style: {\n      position: 'absolute',\n      top: ['top', 'left', 'right'].includes(placement) ? 0 : undefined,\n      left: ['top', 'left', 'bottom'].includes(placement) ? 0 : undefined,\n      bottom: ['bottom'].includes(placement) ? 0 : undefined,\n      right: ['right'].includes(placement) ? 0 : undefined,\n      width: ['left', 'right'].includes(placement) ? size : '100%',\n      height: ['top', 'bottom'].includes(placement) ? size : '100%',\n      zIndex: 1,\n      userSelect: 'none',\n      cursor: 'text',\n      ...props?.style,\n    },\n  };\n};\n\nexport const BlockStartArea = createComponentAs<BlockStartAreaProps>((props) =>\n  createElementAs('div', useBlockStartArea(props))\n);\n","import React from 'react';\nimport { createPluginFactory, QueryNodeOptions } from '@udecode/plate-core';\nimport { BlockSelectable } from './components/BlockSelectable';\nimport { BlockSelectionArea } from './components/BlockSelectionArea';\nimport { BlockStartArea } from './components/BlockStartArea';\nimport { blockSelectionActions } from './blockSelectionStore';\n\nexport const KEY_BLOCK_SELECTION = 'blockSelection';\n\nexport interface BlockSelectionPlugin {\n  query?: QueryNodeOptions;\n}\n\nexport const createBlockSelectionPlugin = createPluginFactory<BlockSelectionPlugin>(\n  {\n    key: KEY_BLOCK_SELECTION,\n    options: {\n      query: {\n        maxLevel: 1,\n      },\n    },\n    inject: {\n      aboveComponent: () => ({ element, children }) =>\n        BlockSelectable({\n          element,\n          children,\n          selectedColor: 'rgb(219 234 254)',\n        }),\n    },\n    handlers: {\n      onFocus: () => () => {\n        blockSelectionActions.reset();\n      },\n    },\n    renderAboveEditable: ({ children }) => (\n      <BlockSelectionArea>\n        <BlockStartArea size={28} placement=\"left\" />\n        <BlockStartArea size={50} placement=\"top\" />\n        <BlockStartArea size={50} placement=\"right\" />\n        <BlockStartArea size={50} placement=\"bottom\" />\n        {children}\n      </BlockSelectionArea>\n    ),\n  }\n);\n"],"names":["extractSelectableIds","els","map","v","getAttribute","blockSelectionStore","createStore","selectedIds","Set","extendActions","set","get","setSelectedIds","added","removed","prev","next","forEach","id","add","delete","reset","extendSelectors","isSelecting","size","isSelected","has","useBlockSelectionSelectors","use","blockSelectionSelectors","blockSelectionActions","useBlockSelectableState","element","state","editor","useEditorRef","path","useMemo","findNodePath","isInline","active","query","getPluginOptions","KEY_BLOCK_SELECTION","queryNode","useBlockSelectable","selectedColor","props","className","style","backgroundColor","undefined","key","BlockSelectable","htmlProps","React","children","SelectionArea","onBeforeStart","onStart","onMove","onStop","selectionAreaClass","selectionContainerClass","container","document","selectables","startAreas","behaviour","features","getBoundaries","boundaries","ref","createRef","useEffect","opt","areaBoundaries","current","selection","VanillaSelectionArea","on","destroy","useBlockSelectionArea","enterHotkeyOptions","deleteHotkeyOptions","useHotkeys","entry","findNode","match","n","setTimeout","focusEditor","getEndPoint","withoutNormalizing","removeNodes","at","event","deselectEditor","shiftKey","clearSelection","store","changed","length","position","BlockSelectionArea","componentProps","useBlockStartArea","placement","top","includes","left","bottom","right","width","height","zIndex","userSelect","cursor","BlockStartArea","createComponentAs","createElementAs","createBlockSelectionPlugin","createPluginFactory","options","maxLevel","inject","aboveComponent","handlers","onFocus","renderAboveEditable"],"mappings":"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"}