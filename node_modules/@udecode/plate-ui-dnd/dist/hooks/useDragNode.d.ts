import { DragSourceHookSpec } from 'react-dnd';
import { TEditor, Value } from '@udecode/plate-core';
import { DragItemNode } from '../types';
export interface UseDragNodeOptions extends DragSourceHookSpec<DragItemNode, unknown, {
    isDragging: boolean;
}> {
    id: string;
}
/**
 * `useDrag` hook to drag a node from the editor. `item` with `id` is required.
 *
 * On drag start:
 * - set `editor.isDragging` to true
 * - add `dragging` class to `body`
 *
 * On drag end:
 * - set `editor.isDragging` to false
 * - remove `dragging` class to `body`
 *
 * Collect:
 * - isDragging: true if mouse is dragging the block
 */
export declare const useDragNode: <V extends Value>(editor: TEditor<V>, { id, item, ...options }: UseDragNodeOptions) => [{
    isDragging: boolean;
}, import("react-dnd").ConnectDragSource, import("react-dnd").ConnectDragPreview];
//# sourceMappingURL=useDragNode.d.ts.map