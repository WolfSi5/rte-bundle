import { DropLineDirection } from '../types';
import { UseDragNodeOptions } from './useDragNode';
import { UseDropNodeOptions } from './useDropNode';
export interface UseDndNodeOptions extends Pick<UseDropNodeOptions, 'id' | 'nodeRef'>, Pick<UseDragNodeOptions, 'type'> {
    drag?: UseDragNodeOptions;
    drop?: UseDropNodeOptions;
    preview?: {
        /**
         * Whether to disable the preview.
         */
        disable?: boolean;
        /**
         * The reference to the preview element.
         */
        ref?: any;
    };
}
/**
 * {@link useDragNode} and {@link useDropNode} hooks to drag and drop a node from the editor.
 * A default preview is used to show the node being dragged, which can be customized or removed.
 * Returns the drag ref and drop line direction.
 */
export declare const useDndNode: ({ id, type, nodeRef, preview: previewOptions, drag: dragOptions, drop: dropOptions, }: UseDndNodeOptions) => {
    isDragging: boolean;
    isOver: boolean;
    dropLine: DropLineDirection;
    dragRef: import("react-dnd").ConnectDragSource;
};
//# sourceMappingURL=useDndNode.d.ts.map